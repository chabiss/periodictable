@inherits LayoutComponentBase
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Dark" Elevation="3">
        Periodic Table Of Elements
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => DrawerToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.End" Color="Color.Dark" ClipMode="DrawerClipMode.Always" Elevation="3">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Align="Align.Center">@selectedElement?.SelectedElement?.Name</MudText>
        </MudDrawerHeader>
        <MudText Typo="Typo.body1">Category: @selectedElement?.SelectedElement?.Category</MudText>
        <p></p>
        <MudText Typo="Typo.body1">Number: @selectedElement?.SelectedElement?.Number</MudText>
        <p></p>
        <MudText Typo="Typo.body1">Mass:@selectedElement?.SelectedElement?.atomic_mass</MudText>
        <p></p>
        <MudText Typo="Typo.body1"></MudText>
        <p></p>
        <MudText Typo="Typo.body1">@selectedElement?.SelectedElement?.Summary</MudText>
        <p></p>
        <MudImage Src="@selectedElement?.SelectedElement?.image?.Url.ToString()"/>
    </MudDrawer>
    <CascadingValue Value="@selectedElement">
        <MudMainContent>
            @Body
        </MudMainContent>
    </CascadingValue>

</MudLayout>

@code {
    public CustomLayout()
    {
        this.selectedElement = new SelectedElementInfo(new Action(() => this.OnSelectedElementChanged()));
    }
    private Action callback;
    private SelectedElementInfo selectedElement = null;

    private MudTheme Theme = new MudTheme();
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void OnSelectedElementChanged()
    {
        this.StateHasChanged();
    }
}
